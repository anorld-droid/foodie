// Mocks generated by Mockito 5.4.2 from annotations
// in model/test/src/cart_item_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:get/get.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:model/src/cart_item.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRx_0<T> extends _i1.SmartFake implements _i2.Rx<T> {
  _FakeRx_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartItem].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartItem extends _i1.Mock implements _i3.CartItem {
  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get photoUrl => (super.noSuchMethod(
        Invocation.getter(#photoUrl),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  int get stockTag => (super.noSuchMethod(
        Invocation.getter(#stockTag),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  String get store => (super.noSuchMethod(
        Invocation.getter(#store),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);

  @override
  double get basicPrice => (super.noSuchMethod(
        Invocation.getter(#basicPrice),
        returnValue: 0.0,
        returnValueForMissingStub: 0.0,
      ) as double);

  @override
  _i2.Rx<double> get sellingPrice => (super.noSuchMethod(
        Invocation.getter(#sellingPrice),
        returnValue: _FakeRx_0<double>(
          this,
          Invocation.getter(#sellingPrice),
        ),
        returnValueForMissingStub: _FakeRx_0<double>(
          this,
          Invocation.getter(#sellingPrice),
        ),
      ) as _i2.Rx<double>);

  @override
  _i2.Rx<int> get quantity => (super.noSuchMethod(
        Invocation.getter(#quantity),
        returnValue: _FakeRx_0<int>(
          this,
          Invocation.getter(#quantity),
        ),
        returnValueForMissingStub: _FakeRx_0<int>(
          this,
          Invocation.getter(#quantity),
        ),
      ) as _i2.Rx<int>);

  @override
  int get limit => (super.noSuchMethod(
        Invocation.getter(#limit),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  Map<String, dynamic> toFirestore() => (super.noSuchMethod(
        Invocation.method(
          #toFirestore,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
